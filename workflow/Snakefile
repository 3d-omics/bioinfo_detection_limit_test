# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

from snakemake.utils import min_version

min_version("8.0")

import pandas as pd
import yaml

# Import configuration files
params = yaml.load(open("config/params.yml", "r"), Loader=yaml.SafeLoader)
features = yaml.load(open("config/features.yml", "r"), Loader=yaml.SafeLoader)
samples = pd.read_table("config/samples.tsv", comment="#", dtype="str")
samples["assembly_ids"] = ""

# Generate useful variables

SAMPLE_LIBRARY = samples[["sample_id", "library_id"]].values.tolist()

HOST_NAMES = [] if features["hosts"] is None else list(features["hosts"].keys())

MAG_CATALOGUES = (
    []
    if features["mag_catalogues"] is None
    else list(features["mag_catalogues"].keys())
)

KRAKEN2_DBS = list(features["databases"]["kraken2"].keys())

BAM_REPORTS = ["stats.tsv", "flagstats.txt", "idxstats.tsv"]

LAST_HOST = HOST_NAMES[-1] if len(HOST_NAMES) > 0 else None


# Import modules
module mg_assembly:
    snakefile:
        github("3d-omics/mg_assembly", path="workflow/Snakefile", branch="ci")
    config:
        params


# use rule \
#     bowtie2__build, bowtie2__map, \
#     csvkit__csvstack, \
#     preprocess__reads, preprocess__reads__all \
#     preprocess__fastp, preprocess__fastp__all \
#     preprocess__bowtie2__build, preprocess__bowtie2__build__all, \
#     preprocess__bowtie2__map, preprocess__bowtie2__map__all, \
#     preprocess__bowtie2__all, \
#     preprocess__clean, preprocess__clean__all, \
#     preprocess__kraken2, preprocess__kraken2__all, \
#     preprocess__singlem__microbial_fraction, preprocess__singlem__microbial_fraction__csvstack, \
#     preprocess__singlem__all, \
#     preprocess__nonpareil__all, \
#     preprocess__multiqc, preprocess__multiqc__all \
#     from mg_assembly


use rule * from mg_assembly exclude all


# Import subworkflows
# include: "rules/reads_tsv_functions.smk"
include: "rules/folders.smk"
include: "rules/functions.smk"
include: "rules/quantify.smk"


# use rule prokaryotes__quantify__bowtie2__build as quantify__bowtie2__build with:


rule all:
    input:
        rules.preprocess__all.input,
        rules.quantify__all.input,
