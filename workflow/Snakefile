# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.

import pandas as pd
import yaml

# Import configuration files
params = yaml.load(open("config/params.yml", "r"), Loader=yaml.SafeLoader)
features = yaml.load(open("config/features.yml", "r"), Loader=yaml.SafeLoader)
samples = pd.read_table("config/samples.tsv", comment="#", dtype="str")

# Generate useful variables
SAMPLES = samples["sample"].drop_duplicates().values.tolist()
SAMPLE_LIB = samples[["sample", "library"]].values.tolist()
SAMPLE_LIB_PE = samples[samples["library_type"] == "PE"][
    ["sample", "library"]
].values.tolist()
SAMPLE_LIB_SE = samples[samples["library_type"] == "SE"][
    ["sample", "library"]
].values.tolist()
HOST_NAMES = [] if features["reference"] is None else list(features["reference"].keys())
MAG_CATALOGUES = list(features["mag_catalogues"].keys())
KRAKEN2_DBS = list(features["kraken2_dbs"].keys())
BAM_REPORTS = ["stats.tsv", "flagstats.txt", "idxstats.tsv"]
LAST_HOST = HOST_NAMES[-1] if len(HOST_NAMES) > 0 else None


# Import subworkflows
include: "rules/helpers/functions.smk"
include: "rules/folders.smk"
include: "rules/reference.smk"
include: "rules/reads/reads.smk"
include: "rules/fastp_functions.smk"
include: "rules/fastp.smk"
include: "rules/kraken2_functions.smk"
include: "rules/kraken2.smk"
include: "rules/bowtie2_functions.smk"
include: "rules/bowtie2_hosts.smk"
include: "rules/bowtie2_mags.smk"
include: "rules/stats_functions.smk"
include: "rules/stats.smk"
include: "rules/samtools.smk"
include: "rules/fastqc.smk"
include: "rules/report_functions.smk"
include: "rules/report_step.smk"
include: "rules/report_library.smk"


rule all:
    input:
        # rules.reads.input,
        # rules.fastp.input,
        # rules.bowtie2.input,
        rules.stats.input,
        rules.report_step.input,
        rules.report_library.input,
